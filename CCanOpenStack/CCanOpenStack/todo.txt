TODO:
- Function that checks timer and sends heartbeat if enabled in OD + test
- Change SDO send/receive take COB ID from object dictionary 0x1200
- Function that processes RPDO if enabled in OD and uses mapping to save values in OD + test
- Function that checks timer and starts TPDO transmission if enabled in OD + test
- Function that prepares TPDO message using mapping + test
- Function that puts node into operational state if enabled in OD 0x1F80 + test
- Reset communication and reset device functions. Also add them to nmt_slave.c to be called when appropriated command is received.
- Implement functions that set the "current_state" variable in nmt_slave.c.
- Transmit boot up message (transmitted after NMT initialization is finished, when going into NMT pre-operational)

--------------------------------------------------------------------------------------
DONE:
- Create a blueprint for default object dictionary
- Implement data types and access types
- Test data types and access types
- Create NMT tests
- Create node reset tests
- NMT processing
- Implement heartbeat
- Create functions that create and parse SDO messages
  + Add SDO abort codes enum
  + Add SDO client abort transfer message test
  + Add tests for server SDO messages
- Somehow create and SDO server - one with OD and listening to CAN bus for SDO message and responsds
- Create a CANopen node structure that holds object dictionary.
- Remove objects structure array from od.c, and instead pass a pointer to each od.c function, so that they could be used with any object dictionary from any node.